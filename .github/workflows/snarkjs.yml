name: snarkjs

on:
  push:
    branches: [main]

jobs:
  circom:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download circom
        uses: supplypike/setup-bin@v4
        with:
          uri: "https://github.com/iden3/circom/releases/latest/download/circom-linux-amd64"
          name: "circom"
          version: "latest"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install node_modules
        run: npm install

      - name: Compile circuit
        run: |
          mkdir out
          circom circuits/guardianhash.circom --r1cs --sym --json --wasm --c -l node_modules -o out

      - name: Upload guardianhash_js
        uses: actions/upload-artifact@v4
        with:
          name: guardianhash_js
          path: out/guardianhash_js

      - name: Upload guardianhash_wasm
        uses: actions/upload-artifact@v4
        with:
          name: guardianhash_wasm
          path: out/guardianhash_js/guardianhash.wasm

      - name: Upload guardianhash_cpp
        uses: actions/upload-artifact@v4
        with:
          name: guardianhash_cpp
          path: out/guardianhash_cpp

      - name: Upload r1cs
        uses: actions/upload-artifact@v4
        with:
          name: r1cs
          path: out/guardianhash.r1cs

      - name: Upload sym
        uses: actions/upload-artifact@v4
        with:
          name: sym
          path: out/guardianhash.sym

      - name: Upload json
        uses: actions/upload-artifact@v4
        with:
          name: json
          path: out/guardianhash_constraints.json

  cpp:
    needs: [circom]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: guardianhash_cpp
      - name: Install deps
        run: sudo apt-get install -y nlohmann-json3-dev libgmp-dev nasm
      - name: Build executable
        run: make
      - name: Upload executable
        uses: actions/upload-artifact@v4
        with:
          name: executable
          path: guardianhash
      - name: Upload dat
        uses: actions/upload-artifact@v4
        with:
          name: dat
          path: guardianhash.dat

  ceremony:
    needs: [circom]
    runs-on: ubuntu-latest
    env:
      ADJUSTED_COUNT: 4
      POWER_OF_2: 1
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download json
        uses: actions/download-artifact@v4
        with:
          name: json
          path: out

      - name: Download r1cs
        uses: actions/download-artifact@v4
        with:
          name: r1cs
          path: out

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install node_modules
        run: npm install

      - name: Count number of constraints
        id: count_lines
        run: |
          LINE_COUNT=$(wc -l < out/guardianhash_constraints.json)
          ADJUSTED_COUNT=$((LINE_COUNT - ${{ env.ADJUSTED_COUNT }}))
          echo "ADJUSTED_COUNT=$ADJUSTED_COUNT" >> $GITHUB_ENV

      - name: Find least power of 2 larger than number of constraints
        id: power_of_2
        run: |
          ADJUSTED_COUNT=${{ env.ADJUSTED_COUNT }}
          POWER_OF_2=2
          EXPONENT=1
          while [ $POWER_OF_2 -le $ADJUSTED_COUNT ]; do
            POWER_OF_2=$((POWER_OF_2 * 2))
            EXPONENT=$((EXPONENT + 1))
          done
          echo "POWER_OF_2=$EXPONENT" >> $GITHUB_ENV

      - name: Cache ppot ptau
        id: cache-ptau
        uses: actions/cache@v4
        with:
          path: out/ppot_0080_${{ env.POWER_OF_2 }}.ptau
          key: ${{ env.POWER_OF_2 }}

      - name: Download ppot ptau
        if: steps.cache-ptau.outputs.cache-hit != 'true'
        run: |
          cd out
          curl -O https://pse-trusted-setup-ppot.s3.eu-central-1.amazonaws.com/pot28_0080/ppot_0080_${{ env.POWER_OF_2 }}.ptau

      - name: Ceremony Phase 2
        run: |
          cd out
          npx snarkjs groth16 setup guardianhash.r1cs ppot_0080_21.ptau guardianhash_0000.zkey
          npx snarkjs zkey contribute guardianhash_0000.zkey guardianhash_0001.zkey --name="1st Contributor Name" -v -e="Some random text"
          npx snarkjs zkey export verificationkey guardianhash_0001.zkey verification_key.json

      - name: Upload zkey
        uses: actions/upload-artifact@v4
        with:
          name: zkey
          path: out/guardianhash_0001.zkey

      - name: Upload verification key
        uses: actions/upload-artifact@v4
        with:
          name: verification_key
          path: out/verification_key.json
